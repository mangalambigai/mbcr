{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sw.js"],"names":[],"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","file":"sw.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n  \n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var request = (this._store || this._index)[funcName].apply(this._store, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n  }\n  else {\n    self.idb = exp;\n  }\n}());","import idb from 'idb';\r\n\r\nvar staticCacheName = 'mbta-static-v1';\r\n\r\n/**\r\n * Install the database\r\n */\r\nvar dbPromise = idb.open('mbta', 2, function(upgradeDb) {\r\n    switch (upgradeDb.oldVersion) {\r\n        case 0:\r\n            var stopTimeStore = upgradeDb.createObjectStore('stoptimes', {\r\n                keyPath: ['tripName', 'stopOrder']\r\n            });\r\n            //this will help get the trip names for the stop.\r\n            stopTimeStore.createIndex('stoptime', ['stopName', 'arrival']);\r\n            //this will help get the stoptimes by tripname\r\n            stopTimeStore.createIndex('tripName', 'tripName');\r\n\r\n            var tripStore = upgradeDb.createObjectStore('trips', {\r\n                keyPath: 'tripName'\r\n            });\r\n            var calendarStore = upgradeDb.createObjectStore('calendar', {\r\n                keyPath: 'serviceId'\r\n            });\r\n        case 1:\r\n            var routeFileStore = upgradeDb.createObjectStore('routefiles', {\r\n                keyPath: 'routeName'\r\n            });\r\n    }\r\n});\r\n/**\r\n * Load the data from stop_times_cr.txt to indexedDB\r\n */\r\nself._processRouteFilesData = function(gtfsData) {\r\n\r\n    dbPromise.then(function(db) {\r\n        var allTextLines = gtfsData.split(/\\r\\n|\\n/);\r\n\r\n        var tx = db.transaction('routefiles', 'readwrite');\r\n        var routeFileStore = tx.objectStore('routefiles');\r\n\r\n        allTextLines.forEach(function(line) {\r\n            if (line.trim().length > 0) {\r\n                var entries = line.split(',');\r\n                var routename = entries[0].replace(/['\"]+/g, '');\r\n                var filename = entries[1].replace(/['\"]+/g, '');\r\n\r\n                //add the entry to indexDB stoptimes store\r\n                routeFileStore.put({\r\n                    routeName: routename,\r\n                    fileName: filename,\r\n                    loadedInDB: false\r\n                });\r\n            }\r\n        });\r\n        return tx.complete;\r\n    }).then(function() {\r\n        console.log('added entries to indexDB stopTimes');\r\n    }).catch(function(error) {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n/**\r\n * Load the data from stop_times_cr.txt to indexedDB\r\n */\r\nself._processStopTimesData = function(gtfsData) {\r\n\r\n    dbPromise.then(function(db) {\r\n        var allTextLines = gtfsData.split(/\\r\\n|\\n/);\r\n\r\n        var tx = db.transaction('stoptimes', 'readwrite');\r\n        var stopTimeStore = tx.objectStore('stoptimes');\r\n\r\n        allTextLines.forEach(function(line) {\r\n            if (line.trim().length > 0) {\r\n                var entries = line.split(',');\r\n                var tripname = entries[0].replace(/['\"]+/g, '');\r\n                //convert to date so we can compare\r\n                var arr = new Date('January 1, 1970 ' + entries[1].replace(/['\"]+/g, ''));\r\n                var dep = new Date('January 1, 1970 ' + entries[2].replace(/['\"]+/g, ''));\r\n                var stop = entries[3].replace(/['\"]+/g, '');\r\n                var stoporder = entries[4].replace(/['\"]+/g, '');\r\n\r\n                //add the entry to indexDB stoptimes store\r\n                stopTimeStore.put({\r\n                    tripName: tripname,\r\n                    arrival: arr,\r\n                    departure: dep,\r\n                    stopName: stop,\r\n                    stopOrder: stoporder\r\n                });\r\n            }\r\n        });\r\n        return tx.complete;\r\n    }).then(function() {\r\n        console.log('added entries to indexDB stopTimes');\r\n    }).catch(function(error) {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n/**\r\n * Load the data from trips_cr.txt to indexedDB\r\n */\r\nself._processTripsData = function(gtfsData) {\r\n\r\n    dbPromise.then(function(db) {\r\n        var allTextLines = gtfsData.split(/\\r\\n|\\n/);\r\n\r\n        var tx = db.transaction('trips', 'readwrite');\r\n        var tripStore = tx.objectStore('trips');\r\n\r\n        allTextLines.forEach(function(line) {\r\n            if (line.trim().length > 0) {\r\n                var entries = line.split(',');\r\n                var routename = entries[0].replace(/['\"]+/g, '');\r\n                var servicename = entries[1].replace(/['\"]+/g, '');\r\n                var tripname = entries[2].replace(/['\"]+/g, '');\r\n                var direction = entries[5].replace(/['\"]+/g, '');\r\n\r\n                //add the entry to indexDB trips store\r\n                tripStore.put({\r\n                    tripName: tripname,\r\n                    routeName: routename,\r\n                    serviceName: servicename,\r\n                    direction: direction\r\n                });\r\n            }\r\n        });\r\n        return tx.complete;\r\n    }).then(function() {\r\n        console.log('added entries to indexDB trips store');\r\n    }).catch(function(error) {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n/**\r\n * Cache this route\r\n */\r\nself._cacheRoute = function(route_id) {\r\n    //find the route in the table\r\n    dbPromise.then(function(db) {\r\n        var tx = db.transaction('routefiles');\r\n        var routeFileStore = tx.objectStore('routefiles');\r\n        return routeFileStore.get(route_id);\r\n    }).then(function(routedata) {\r\n        if (!routedata.loadedInDB)\r\n        {\r\n            console.log('will cache ', routedata.fileName);\r\n            return caches.match('data/'+routedata.fileName);\r\n        }\r\n    }).then(function(cachedFile) {\r\n        if (cachedFile){\r\n\r\n            return cachedFile.text();\r\n        }\r\n    }).then(function(text) {\r\n        if (text) {\r\n            console.log('calling _processStopTimesData');\r\n            return self._processStopTimesData(text);\r\n        }\r\n        else\r\n            return 'not updated';\r\n    }).then(function(param) {\r\n        if (param !== 'not updated')\r\n        //update the routefilestore flag for the route.\r\n        return dbPromise.then(function(db) {\r\n            var wtx = db.transaction('routefiles', 'readwrite');\r\n            var routeFileStore = wtx.objectStore('routefiles');\r\n            routeFileStore.put({routeName: route_id, loadedInDB: true });\r\n            return wtx.complete;\r\n        });\r\n    }).catch(function(error) {\r\n        console.log('Error storing '+ route_id +' stop times data to IndexedDb', error);\r\n    });\r\n    console.log('route_id in _cacheRoute', route_id);\r\n};\r\n/**\r\n * Load the data from calendar_cr.txt to indexedDB\r\n */\r\nself._processCalendarData = function(gtfsData) {\r\n\r\n    dbPromise.then(function(db) {\r\n        var allTextLines = gtfsData.split(/\\r\\n|\\n/);\r\n\r\n        var tx = db.transaction('calendar', 'readwrite');\r\n        var calendarStore = tx.objectStore('calendar');\r\n\r\n        allTextLines.forEach(function(line) {\r\n            if (line.trim().length > 0) {\r\n                var entries = line.split(',');\r\n                var servicename = entries[0].replace(/['\"]+/g, '');\r\n                var days = [\r\n                    entries[7], //sunday is 0th day in js, but 7th in gtfs\r\n                    entries[1],\r\n                    entries[2],\r\n                    entries[3],\r\n                    entries[4],\r\n                    entries[5],\r\n                    entries[6],\r\n                    ];\r\n\r\n                //add the entry to indexDB calendar store\r\n                calendarStore.put({\r\n                    serviceId: servicename,\r\n                    days: days\r\n                });\r\n            }\r\n        });\r\n        return tx.complete;\r\n    }).then(function() {\r\n        console.log('added entries to indexDB calendar store');\r\n    }).catch(function(error) {\r\n        console.log(error);\r\n    });\r\n};\r\n\r\n/**\r\n * Update the cache on install\r\n */\r\nself.addEventListener('install', function(event) {\r\n    event.waitUntil(\r\n        caches.open(staticCacheName)\r\n        .then(function(cache) {\r\n            console.log('Adding cache');\r\n            //non critical\r\n            cache.addAll([\r\n                'data/stop_times_fairmont.txt',\r\n                'data/stop_times_fitchburg.txt',\r\n                'data/stop_times_franklin.txt',\r\n                'data/stop_times_greenbush.txt',\r\n                'data/stop_times_haverhill.txt',\r\n                'data/stop_times_kingston.txt',\r\n                'data/stop_times_lowell.txt',\r\n                'data/stop_times_middleborough.txt',\r\n                'data/stop_times_needham.txt',\r\n                'data/stop_times_newburyport.txt',\r\n                'data/stop_times_providence.txt',\r\n                'data/stop_times_worcester.txt'\r\n                ]);\r\n            //critical\r\n            return cache.addAll([\r\n                'index.html',\r\n                'js/all.js',\r\n                'favicon.ico',\r\n                'js/lib/angular.min.js',\r\n                'css/bootstrapcerulean.css',\r\n                'css/styles.css',\r\n                'data/route_files.txt',\r\n                'data/trips_cr.txt',\r\n                'data/calendar_cr.txt'\r\n            ]);\r\n        })\r\n        .then(function() {\r\n            console.log('added cache');\r\n            return Promise.all ([\r\n\r\n/*            //get the gtfs -stop_times_cr data, and then store it to indexdb\r\n            caches.match('data/stop_times_cr.txt')\r\n            .then(function(response) {\r\n                return response.text();\r\n            }).then(function(text) {\r\n                return self._processStopTimesData(text);\r\n            }).catch(function(error) {\r\n                console.log('Error storing stop times data to IndexedDb', error);\r\n            }),\r\n*/\r\n        //get the file mapping routes and stoptimes files, and then store it to indexeddb\r\n            caches.match('data/route_files.txt')\r\n            .then(function(response) {\r\n                return response.text();\r\n            }).then(function(text) {\r\n                return self._processRouteFilesData(text);\r\n            }).catch(function(error) {\r\n                console.log('Error storing stop times data to IndexedDb', error);\r\n            }),\r\n\r\n\r\n        //get the gtfs -trips_cr data, and store it to indexdb\r\n            caches.match('data/trips_cr.txt')\r\n            .then(function(response) {\r\n                return response.text();\r\n            }).then(function(text) {\r\n                return self._processTripsData(text);\r\n            }).catch(function(error) {\r\n                console.log('Error storing trips data to IndexedDb', error);\r\n            }),\r\n\r\n        //get the gtfs calendar_cr data, and store it to indexdb\r\n            caches.match('data/calendar_cr.txt')\r\n            .then(function(response) {\r\n                return response.text();\r\n            }).then(function(text) {\r\n                return self._processCalendarData(text);\r\n            }).catch(function(error) {\r\n                console.log('Error storing calendar data to IndexedDb', error);\r\n            })\r\n        ])})\r\n    );\r\n\r\n});\r\n\r\n/**\r\n * Cleanup cache on activation\r\n */\r\nself.addEventListener('activate', function(event) {\r\n    event.waitUntil(\r\n        caches.keys().then(function(cacheNames) {\r\n            return Promise.all(\r\n                cacheNames.filter(function(cacheName) {\r\n                    return cacheName.startsWith('mbta-') &&\r\n                        cacheName != staticCacheName;\r\n                }).map(function(cacheName) {\r\n                    return caches.delete(cacheName);\r\n                })\r\n            );\r\n        })\r\n    );\r\n});\r\n\r\n/**\r\n * Gets the parameter from the url search string\r\n */\r\nself._getSearchParam = function(searchString, param) {\r\n    var loc = searchString.indexOf(param + '=') + param.length + 1;\r\n    var nextloc = searchString.indexOf('&', loc);\r\n    if (nextloc > -1) {\r\n        return decodeURIComponent(searchString.substr(loc, nextloc - loc));\r\n    } else\r\n        return decodeURIComponent(searchString.substr(loc));\r\n};\r\n\r\n/**\r\n * Responds with data from cache when the file/data is available\r\n */\r\nself.addEventListener('fetch', function(event) {\r\n    var requestUrl = new URL(event.request.url);\r\n\r\n    if (requestUrl.origin === location.origin) {\r\n        //this is a request for a static resource\r\n        event.respondWith(\r\n            caches.match(event.request).then(function(response) {\r\n                return response || fetch(event.request);\r\n            })\r\n        );\r\n    } else {\r\n        //this is a schedule request, try to get from indexDB and also realtime\r\n        if (requestUrl.hostname === 'mbta-cr.appspot.com') {\r\n            if( requestUrl.pathname === '/schedulebystop') {\r\n\r\n                event.respondWith(\r\n                    fetch(event.request).then( function(response){\r\n                        /******\r\n                        //This would be a very good spot to clone response and\r\n                        //cache the route, but we have to find out\r\n                        //if the destination station falls in that route.\r\n                        //Since too many routes run thru some stations (Like South station)\r\n                        //we dont want to cache all routes for starting station.\r\n\r\n                        var responsecopy = response.clone();\r\n                        responsecopy.json().then(function(json) {\r\n                            console.log(json);\r\n                        });\r\n                        //var route_id = self._getRouteId(responsecopy);\r\n                        //cache that route\r\n                        //self._cacheRoute(route_id);\r\n                        */\r\n                        return response;\r\n                    }).catch(function(error) {\r\n                        console.log(error);\r\n                        return self._getTripIds(requestUrl)\r\n                        .then(self._filterTripByDay)\r\n                        .then(function(response) {\r\n                            console.log('in _getTripIds response', response);\r\n                            return new Response(JSON.stringify({\r\n                                fromIDB:true,\r\n                                tripIds: response\r\n                            }), {'Content-Type': 'application/json'});\r\n                        }).catch(function(error) {\r\n                            console.log('in _getTripIds error', error);\r\n                            return new Response(JSON.stringify({\r\n                                fromIDB: true,\r\n                                error: error\r\n                            }));\r\n                        });\r\n\r\n                    })\r\n                );\r\n            } else if (requestUrl.pathname === '/schedulebytrip') {\r\n                event.respondWith(\r\n                    fetch(event.request).then( function(response){\r\n                        return response;\r\n                    }).catch(function(error) {\r\n                        return self._getScheduleByTrip(requestUrl)\r\n                        .then(function(response) {\r\n                            console.log('from sw.js', response);\r\n                            return new Response(\r\n                                JSON.stringify( response ),\r\n                                {'Content-Type': 'application/json'}\r\n                            );\r\n                        });\r\n                    })\r\n                );\r\n            }\r\n\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Returns a promise for the trip ids for the stop for the next max_time hours.\r\n * stoptimes.txt has the trips - station - arrival and departure times data.\r\n */\r\nself._getTripIds = function (requestUrl) {\r\n    //console.log('in _getTripIds' , requestUrl);\r\n    return new Promise( function (resolve, reject) {\r\n        // get the stop and max_time (in minutes) from requestUrl\r\n        var stop = self._getSearchParam(requestUrl.search, 'stop');\r\n        var max_time = self._getSearchParam(requestUrl.search, 'max_time');\r\n\r\n        var currentDate = new Date();\r\n        var startTime = new Date('January 1, 1970 ' + currentDate.toLocaleTimeString());\r\n        var endTime = new Date(startTime.valueOf() + max_time * 60 * 1000);\r\n        var day = currentDate.getDay();\r\n\r\n        //this array will hold the trip ids to be returned\r\n        var tripIds=[];\r\n        dbPromise.then(function(db) {\r\n            var tx = db.transaction(['stoptimes']);\r\n            var stopTimeStore = tx.objectStore('stoptimes');\r\n\r\n            var stopIndex = stopTimeStore.index('stoptime');\r\n            var keyRange = IDBKeyRange.bound([stop, startTime], [stop, endTime]);\r\n            stopIndex.openCursor(keyRange)\r\n            .then(function logStop(cursor) {\r\n                if (!cursor)\r\n                    return;\r\n                tripIds.push(cursor.value.tripName);\r\n\r\n                return cursor.continue().then(logStop);\r\n            }).then(function() {\r\n                //console.log('_getTripIds resolving with ...', tripIds);\r\n                resolve(tripIds);\r\n            });\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Returns a promise for the list of trips filtered by current day\r\n * Trips run on the week days specified in calendar.txt\r\n */\r\nself._filterTripByDay = function(tripIds) {\r\n    return new Promise(function(resolve, reject) {\r\n        //fetch the service id, route id, direction from trips datastore,\r\n        //then fetch the calendar for the service.\r\n        Promise.all(tripIds.map(self._getTripData))\r\n        .then(function(tripCalendarDatas) {\r\n            //make sure the trip runs on that day\r\n            var currentDate = new Date();\r\n            var day = currentDate.getDay();\r\n            var arrayToReturn = [];\r\n\r\n            tripCalendarDatas.forEach(function(tripCalendarData) {\r\n                if (tripCalendarData[1].days[day] === \"1\") {\r\n                    arrayToReturn.push(tripCalendarData[0]);\r\n                }\r\n            });\r\n            resolve(arrayToReturn);\r\n        });\r\n    });\r\n};\r\n\r\n/**\r\n * Gets trip and calendar data for the trip and returns them\r\n */\r\nself._getTripData = function( tripName ) {\r\n    var tripPromise = dbPromise.then(function(db) {\r\n        var tx = db.transaction(['trips']);\r\n        var tripStore = tx.objectStore('trips');\r\n        return tripStore.get(tripName);\r\n    });\r\n    var calendarPromise = Promise.all([dbPromise, tripPromise]).then(function(param) {\r\n        var db = param[0];\r\n        var tripval = param[1];\r\n        //console.log('value from trip db',tripval);\r\n        var tx = db.transaction(['calendar']);\r\n        var calendarStore = tx.objectStore('calendar');\r\n        return calendarStore.get(tripval.serviceName);\r\n    });\r\n    return Promise.all([tripPromise, calendarPromise]);\r\n};\r\n\r\n/**\r\n * Returns a promise for the trip's schedule\r\n * stoptimes.txt has the trips - station - arrival and departure times data.\r\n */\r\nself._getScheduleByTrip = function(requestUrl){\r\n    return new Promise( function (resolve, reject) {\r\n        var tripId = self._getSearchParam(requestUrl.search, 'trip');\r\n        dbPromise.then(function(db) {\r\n            //console.log('in _getScheduleByTrip', tripId);\r\n            var tx = db.transaction(['stoptimes', 'trips']);\r\n            var tripStore = tx.objectStore('trips');\r\n            var stopTimeStore = tx.objectStore('stoptimes');\r\n            var tripIndex = stopTimeStore.index('tripName');\r\n            Promise.all( [tripStore.get(tripId), tripIndex.getAll(tripId)])\r\n            .then(function (values) {\r\n                var ret = {\r\n                    route_id: values[0].routeName,\r\n                    trip_id: values[0].tripName,\r\n                    direction_name: values[0].direction,\r\n                };\r\n\r\n                //UI expects the time to be in epoch time (number of seconds)\r\n                var stops = [];\r\n                values[1].forEach(function(stopval) {\r\n                    stops.push({\r\n                        stop_order: stopval.stopOrder,\r\n                        stop_name: stopval.stopName,\r\n                        sch_arr_dt: stopval.arrival.valueOf()/1000,\r\n                        sch_dep_dt: stopval.departure.valueOf()/1000\r\n                    });\r\n                });\r\n                //important: sort by stop order! UI depends on it\r\n                stops.sort(function(a,b){\r\n                    return a.stop_order - b.stop_order;\r\n                });\r\n                ret.stop = stops;\r\n                console.log('values in _getScheduleByTrip', ret);\r\n                resolve(ret);\r\n            });\r\n        });\r\n    });\r\n};\r\n/**\r\n * Responds to messages from controller\r\n */\r\nself.addEventListener('message', function(event) {\r\n    if (event.data.action === 'skipWaiting') {\r\n        self.skipWaiting();\r\n    }\r\n    if (event.data.action === 'cacheRoute') {\r\n        self._cacheRoute(event.data.route_id);\r\n    }\r\n});"]}